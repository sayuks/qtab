% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quarto_tabset.R
\name{quarto_tabset}
\alias{quarto_tabset}
\title{Create tabset panels in quarto markdown}
\usage{
quarto_tabset(
  data,
  tabset_vars,
  output_vars,
  layout = NULL,
  heading_levels = NULL
)
}
\arguments{
\item{data}{A data frame.}

\item{tabset_vars}{Variables to use as tabset labels.}

\item{output_vars}{Variables to display in each tabset panel.}

\item{layout}{\code{NULL} or a character vector of length 1 for specifying layout
in tabset panel. If not \code{NULL}, \code{layout} must begin with at least three
or more repetitions of ":" (e.g. ":::").}

\item{heading_levels}{\code{NULL} or a positive integer-ish numeric vector of
length equal to the number of columns specified in \code{tabset_vars}.
This controls whether it is partially (or entirely) displayed
as normal header instead of tabset.
\itemize{
\item If \code{NULL}, all output is tabset.
\item If a positive integer-ish numeric vector, the elements of the vector
correspond to the columns specified in \code{tabset_vars}.
\itemize{
\item If the element is integer, the tabset column is displayed as headers
with their level, not tabset. (e.g. 2 means h2 header).
Levels 1 to 6 are recommended. The reason is that quarto supports headers
up to 6. 7 and above will also work, but they are displayed as normal
text. In addition, considering the chapter format,
it is preferable to gradually increase the level, as in 1, 2 and 3.
\item If the element is NA, tabset is displayed.
}
}}
}
\value{
\code{NULL} invisibly. (Create tabsest/heading as a side effect.)
}
\description{
The function takes in a data frame or a tibble and produces
tabset panels for each unique combination of the tabset variables.
\emph{\strong{Only works with .qmd files in HTML format.}}
}
\details{
\itemize{
\item Write \verb{#| results: asis} at the beginning of the chunk or
\code{results='asis'} in the chunk options.
\item The \code{data} is sorted internally in the order of \code{tabset_vars}.
Define the order beforehand, e.g. using factor.
\item If multiple \code{tabset_vars} are given, create nested tabsets.
\item \code{output_vars} can also be figures or tables if \code{data} is a tibble.
\item If factor columns are included in output_vars, they are converted
internally to character.
\item When outputting tables or figures that use javascript
(such as \code{{plotly}}, \code{{leaflet}}, \code{{DT}}, \code{{reactable}}, etc.),
it seems javascript dependencies need to be resolved.
A simple solution is to wrap the output in \code{\link[htmltools:builder]{htmltools::div()}}
and create a dummy plot in another chunk. See the demo page for details.
\item The function has an optional argument, \code{layout}, which allows for
the addition of layout option to the outputs
(see \url{https://quarto.org/docs/authoring/figures.html}).
However, this is intended for simplified use cases and
complex layouts may not work. See Examples for more details.
}
}
\examples{
# sample data
df <- data.frame(
  group1 = c(rep("A", 3), rep("B", 3)),
  group2 = rep(c("X", "Y", "Z"), 2),
  var1 = rnorm(6),
  var2 = rnorm(6),
  var3 = rnorm(6)
)

# Here are examples of the output before it is converted to tabset.
# If you want it to actually work, in the .qmd file,
# set `results='asis'` in the chunk options or
# write `#| results: asis` at the beginning of the chunk.

# Basic usage
quarto_tabset(df, c(group1, group2), c(var1, var2, var3))

# Here is an example of the `layout` argument.
quarto_tabset(
  df,
  c(group1, group2),
  c(var1, var2, var3),
  layout = '::: {layout="[2, 3, 5]"}'
)

# Use heading instead of tabset
quarto_tabset(
  df,
  c(group1, group2),
  c(var1, var2, var3),
  heading_levels = c(2, 3)
)
}
